name: Integration tests

on:
  workflow_call:
    inputs:
      node_version_file:
        description: "setup-node reads Node version from here"
        required: false
        type: string
        default: ".nvmrc"

permissions:
  contents: read

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - name: Wait for Postgres
        run: |
          for i in {1..60}; do
            pg_isready -h 127.0.0.1 -p 5432 -U postgres -d postgres && break
            sleep 1
          done

      - name: Checkout hmpps-workload
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/hmpps-workload
          path: hmpps-workload
      - name: Set up JDK 21
        id: jdk21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          check-latest: true

      - name: Verify Java
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          java -version

      # --- Pass 1: migrate up to just before 1.31 ---
      - name: Build workload app (skip tests)
        working-directory: hmpps-workload
        env:
          JAVA_HOME: ${{ steps.jdk21.outputs.path }}
        run: |
          chmod +x ./gradlew
          java -version
          ./gradlew --no-daemon bootJar -x test

      - name: Flyway migrate to 1.30 (stop before 1.31)
        working-directory: hmpps-workload
        env:
          JAVA_HOME: ${{ steps.jdk21.outputs.path }}
          SPRING_DATASOURCE_URL: jdbc:postgresql://127.0.0.1:5432/postgres
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
          SPRING_FLYWAY_ENABLED: "true"
          SPRING_FLYWAY_SCHEMAS: app
          SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
          SPRING_FLYWAY_TARGET: "1.30"
          SPRING_MAIN_WEB_APPLICATION_TYPE: none
          HMPPS_TIER_ENDPOINT_URL: http://127.0.0.1:0
        run: |
          JAR=$(find build/libs -name '*.jar' | head -n1)
          [ -z "$JAR" ] && echo "No jar found" && exit 1
          java -version
          timeout 180s java -jar "$JAR" --spring.main.web-application-type=none

      # --- Drop dependent views that block 1.31 ---
      - name: Drop case_details dependent views (prep for 1.31)
        run: |
          psql "postgres://postgres:postgres@127.0.0.1:5432/postgres" -v ON_ERROR_STOP=1 <<'SQL'
          CREATE SCHEMA IF NOT EXISTS app;
          DO $$
          BEGIN
            IF EXISTS (SELECT 1 FROM pg_views WHERE schemaname='app' AND viewname='case_details_view')
              THEN EXECUTE 'DROP VIEW app.case_details_view';
            END IF;
            IF EXISTS (SELECT 1 FROM pg_views WHERE schemaname='app' AND viewname='suspended_lifers_export_view')
              THEN EXECUTE 'DROP VIEW app.suspended_lifers_export_view';
            END IF;
            IF EXISTS (SELECT 1 FROM pg_views WHERE schemaname='app' AND viewname='team_case_details_view')
              THEN EXECUTE 'DROP VIEW app.team_case_details_view';
            END IF;
            -- materialized view
            IF EXISTS (SELECT 1 FROM pg_matviews WHERE schemaname='app' AND matviewname='case_details_export_view')
              THEN EXECUTE 'DROP MATERIALIZED VIEW app.case_details_export_view';
            END IF;
          END$$;
          SQL

      # --- Pass 2: migrate the rest (this runs 1.31 and beyond) ---
      - name: Flyway migrate to latest (apply 1.31+)
        working-directory: hmpps-workload
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://127.0.0.1:5432/postgres
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
          SPRING_FLYWAY_ENABLED: "true"
          SPRING_FLYWAY_SCHEMAS: app
          SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
          SPRING_MAIN_WEB_APPLICATION_TYPE: none
          SPRING_FLYWAY_OUT_OF_ORDER: "true"
          HMPPS_TIER_ENDPOINT_URL: http://127.0.0.1:0
        run: |
          JAR=$(find build/libs -name '*.jar' | head -n1)
          timeout 180s java -jar "$JAR" --spring.main.web-application-type=none || true

      # (optional) Prove the tables/views you need exist now
      - name: Sanity check schema contents
        run: |
          psql "postgres://postgres:postgres@127.0.0.1:5432/postgres" -c "\dt app.*" || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ inputs.node_version_file }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Get WireMock
        run: curl -sSLo wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.9.1/wiremock-standalone-3.9.1.jar

      - name: Start WireMock
        run: nohup java -jar wiremock.jar --port 9091 >/tmp/wm-9091.log 2>&1 &

      - name: Run integration tests against same DB
        env:
          DATABASE_SERVER: 127.0.0.1
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
          DATABASE: postgres
          DATABASE_PORT: "5432"
          DATABASE_SSL: "false"
        run: |
          nohup npm run start-feature >/tmp/app.log 2>&1 &
          sleep 5
          npm run integration-test
